buildscript {
    repositories {
        mavenLocal()
        if (project.hasProperty("default_proxy_url")) {
            maven {
                url project.property("default_proxy_url")
                credentials {
                    username project.property("default_proxy_username")
                    password project.property("default_proxy_password")
                }
            }
        }
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
        mavenCentral()
    }
    dependencies {
        classpath("org.grails:grails-gradle-plugin:$grailsVersion") {
            exclude group: "xerces", module: "xercesImpl"
        }
    }
}

apply plugin: "groovy"
apply plugin: "org.grails.grails-web"

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"

    compile pdep(rootProject.externalGroovyDep)
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

test {
    // We'd like memory to be low for the tests so we can trigger GC for
    // class unloading checking
    minHeapSize = "64m"
    maxHeapSize = "92m"
    jvmArgs "-XX:MaxMetaspaceSize=92m", "-Dgroovy.use.classvalue=true"
}
